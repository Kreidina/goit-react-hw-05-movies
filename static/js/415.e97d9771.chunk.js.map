{"version":3,"file":"static/js/415.e97d9771.chunk.js","mappings":"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","sources":["components/CastItem/CastItem.styled.jsx","components/CastItem/CastItem.jsx","components/CardDetailMovie/CardDetailMovie.styled.jsx","components/CardDetailMovie/CardDetailMovie.jsx","components/MoviesItems/MoviesItems.styled.jsx","components/MoviesItems/MoviesItems.jsx","components/SearchBarMovies/SearchBarMovies.styled.jsx","components/SearchBarMovies/SearchBarMovies.jsx","components/Pagination/Paginagion.jsx","components/services/apiMovie.jsx","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastIMG = styled.img`\n  width: 100px;\n`;\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(110px, 1fr));\n  grid-gap: 16px;\n  list-style: none;\n  padding: 15px;\n`;\nexport const Item = styled.li``;\n\nexport const CastCharacter = styled.p`\n  font-size: 12px;\n`;\nexport const CastName = styled.p`\n  margin: 10px;\n  font-weight: 600;\n  font-size: 12px;\n`;\nexport const CastMessage = styled.p`\n  margin: 20px 0;\n  padding: 0 40px;\n  fontweight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { CastCharacter, CastIMG, CastName, Item } from './CastItem.styled';\n\nexport const CastItem = ({ name, character, photo }) => {\n  return (\n    <Item>\n      <CastIMG\n        src={\n          photo !== null\n            ? `https://image.tmdb.org/t/p/w500${photo}`\n            : 'https://gdr.one/simg/95x142/c9c9c9/fff?text=Avatar'\n        }\n        alt={name}\n      />\n      <CastName>{name}</CastName>\n      <CastCharacter>Character: {character}</CastCharacter>\n    </Item>\n  );\n};\n\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  photo: PropTypes.string,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Card = styled.div`\n  padding: 0 20px;\n`;\n\nexport const CardButton = styled.button`\n  padding: 4px;\n  border-radius: 3px;\n  border: none;\n  background-color: #fff;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 3px;\n  margin: 20px 15px 0;\n`;\n\nexport const CardContainer = styled.div`\n  display: flex;\n  padding: 10px;\n`;\nexport const ImgCard = styled.img`\n  width: 220px;\n  height: 100%;\n`;\nexport const InfoContainer = styled.div`\n  padding: 20px;\n`;\nexport const Chip = styled.span`\n  margin-left: 10px;\n`;\nexport const GenerList = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 20px 0;\n`;\nexport const GenerItem = styled.li`\n  margin-right: 10px;\n`;\nexport const CardText = styled.p`\n  margin: 20px 0;\n`;\n\nexport const InfoCard = styled.div`\n  border: 2px solid rgba(0, 0, 0, 0.35);\n  margin: 10px 0;\n  padding: 15px 20px;\n`;\n\nexport const InfoList = styled.ul`\n  list-style: none;\n`;\nexport const InfoItem = styled.li`\n  margin: 10px;\n`;\nexport const MainTitle = styled.h1``;\nexport const SecondTitle = styled.h2``;\nexport const AdditionalInfo = styled.p``;\n\nexport const CardLink = styled(Link)`\n  color: #000;\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  &:hover {\n    color: rgb(255, 72, 0);\n  }\n`;\nexport const LinkBTN = styled(Link)`\n  text-decoration: none;\n  &:hover {\n    color: rgb(255, 72, 0);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  CardContainer,\n  CardText,\n  Chip,\n  GenerItem,\n  GenerList,\n  ImgCard,\n  InfoContainer,\n  MainTitle,\n  SecondTitle,\n} from './CardDetailMovie.styled';\n\nexport const CardDetailMovie = ({ details }) => {\n  const {\n    original_title,\n    poster_path,\n    genres,\n    release_date,\n    overview,\n    vote_average,\n  } = details;\n\n  if (!details) {\n    return null;\n  }\n\n  return (\n    <>\n      {details && (\n        <CardContainer>\n          <ImgCard\n            src={\n              poster_path !== null\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg'\n            }\n            alt={original_title}\n          />\n          <InfoContainer>\n            <MainTitle>\n              {original_title}\n              <Chip>({release_date && release_date.slice(0, 4)})</Chip>\n            </MainTitle>\n            <CardText>Rating: {vote_average?.toFixed(1)}</CardText>\n            <SecondTitle>Overview</SecondTitle>\n            <CardText>{overview}</CardText>\n            <SecondTitle>Genres</SecondTitle>\n            <GenerList>\n              {genres?.map(genre => {\n                return <GenerItem key={genre.id}>{genre.name}</GenerItem>;\n              })}\n            </GenerList>\n          </InfoContainer>\n        </CardContainer>\n      )}\n    </>\n  );\n};\n\nCardDetailMovie.propTypes = {\n  details: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n    release_date: PropTypes.string,\n    overview: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  list-style: none;\n  padding: 15px;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const MovieImg = styled.img`\n  height: 340px;\n`;\nexport const MovieTitle = styled.p`\n  margin: 10px 0;\n`;\n\nexport const TerndingTitle = styled.h1`\n  margin: 10px;\n`;\nexport const MovieNavLink = styled(NavLink)`\n  color: #000;\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  &:hover {\n    color: rgb(255, 72, 0);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { MovieImg, MovieItem, MovieTitle } from './MoviesItems.styled';\n\nexport const MoviesItems = ({ id, poster_path, tags, title }) => {\n  return (\n    <MovieItem key={id}>\n      <MovieImg\n        loading=\"lazy\"\n        src={\n          poster_path !== null\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg'\n        }\n        alt={tags}\n      />\n      <MovieTitle>{title}</MovieTitle>\n    </MovieItem>\n  );\n};\n\nMoviesItems.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  tags: PropTypes.string,\n  title: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const FormSearch = styled.form`\n  display: flex;\n`;\nexport const InputSearch = styled.input`\n  width: 300px;\n  padding: 10px;\n  margin: 10px;\n  border: none;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\nexport const BTNSearch = styled.button`\n  color: white;\n  background-color: rgba(255, 72, 0, 0.74);\n  width: 80px;\n  height: 100%;\n  padding: 10px;\n  margin-top: 10px;\n  border: none;\n  border-radius: 8px;\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { BTNSearch, FormSearch, InputSearch } from './SearchBarMovies.styled';\n\nexport const SearchBarMovies = ({ setSearchParams, setCurrentPage }) => {\n  const [query, setQuery] = useState('');\n\n  const handelChange = ({ target }) => {\n    setQuery(target.value);\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return toast.info('Enter a word to search for a picture');\n    }\n\n    setSearchParams({ query });\n    setCurrentPage(1);\n    setQuery('');\n  };\n\n  return (\n    <FormSearch onSubmit={handelSubmit}>\n      <InputSearch\n        onChange={handelChange}\n        value={query}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <BTNSearch type=\"submit\">Search</BTNSearch>\n    </FormSearch>\n  );\n};\n\nSearchBarMovies.propTypes = {\n  setSearchParams: PropTypes.func.isRequired,\n};\n","import ReactPaginate from 'react-paginate';\nimport styled from '@emotion/styled';\n\nconst MyPaginate = styled(ReactPaginate)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  list-style-type: none;\n  width: 650px;\n  margin: 1.5rem auto;\n\n  li a {\n    border-radius: 7px;\n    padding: 0.1rem 1rem;\n    border: rgb(255, 72, 0) 1px solid;\n    cursor: pointer;\n    background: rgb(255, 72, 0);\n    color: #fff;\n  }\n  li a[aria-current='page'] {\n    background-color: #fff;\n    color: #000;\n  }\n`;\nexport const Paginagion = ({ handlePageChange, total, currentPage }) => {\n  const totalPage = () => {\n    if (total > 100) {\n      return 100;\n    } else {\n      return total;\n    }\n  };\n  const pages = totalPage();\n  return (\n    <MyPaginate\n      previousLabel={'<<'}\n      nextLabel={'>>'}\n      breakLabel={'...'}\n      breakClassName={'pagination__break'}\n      pageCount={pages}\n      marginPagesDisplayed={2}\n      pageRangeDisplayed={4}\n      onPageChange={handlePageChange}\n      containerClassName={'pagination'}\n      pageClassName={'pagination__page'}\n      activeClassName={'pagination__page--active'}\n      previousClassName={'pagination__previous'}\n      nextClassName={'pagination__next'}\n      disabledClassName={'pagination__disabled'}\n      forcePage={currentPage - 1}\n    />\n  );\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_Authorization =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NmYzZWM2NGFiZmI1MWFiZTEzMTgxYThiYjE5MjlmMCIsInN1YiI6IjY0MzAzYmY5NmRlYTNhMDBiNTRlOTNlOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.3wOLdxcoA2DAJirmMuSvEYNDya1YwIdBvChC6VOo9Vs';\n\nexport async function fetchTrendingMovies(page) {\n  try {\n    const response = await axios.get(`3/trending/all/day?page=${page}`, {\n      headers: {\n        Authorization: `${API_Authorization}`,\n        Accept: 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchSearchMovies(search, page) {\n  try {\n    const response = await axios.get(\n      `3/search/movie?&${search}&include_adult=false&&page=${page}`,\n      {\n        headers: {\n          Authorization: `${API_Authorization}`,\n          Accept: 'application/json',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return toast.error('An error occurred on the server. Try again later');\n  }\n}\n\nexport async function fetchDetailsMovies(id) {\n  try {\n    const response = await axios.get(`3/movie/${id}?language=en-US`, {\n      headers: {\n        Authorization: `${API_Authorization}`,\n        Accept: 'application/json',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchCastMovies(id) {\n  try {\n    const response = await axios.get(`3/movie/${id}/credits?`, {\n      headers: {\n        Authorization: `${API_Authorization}`,\n        Accept: 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchReviewsMovies(id) {\n  try {\n    const response = await axios.get(`3/movie/${id}/reviews?&page=1`, {\n      headers: {\n        Authorization: `${API_Authorization}`,\n        Accept: 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport HashLoader from 'react-spinners/HashLoader';\nimport {\n  fetchTrendingMovies,\n  MovieList,\n  MoviesItems,\n  MovieNavLink,\n  TerndingTitle,\n  Paginagion,\n} from 'components';\n\nconst Home = () => {\n  const [moviesName, setMoviesName] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const location = useLocation();\n  const [totalPage, setTotalPage] = useState(0);\n\n  useEffect(() => {\n    setLoading(true);\n    const movies = fetchTrendingMovies(currentPage);\n    movies.then(movie => {\n      setMoviesName(movie.results);\n      setTotalPage(movie.total_pages);\n      setLoading(false);\n    });\n  }, [currentPage]);\n\n  const handlePageChange = selectedPage => {\n    setCurrentPage(selectedPage.selected + 1);\n  };\n\n  if (loading) {\n    return (\n      <HashLoader\n        color=\"#ff4800\"\n        size={70}\n        cssOverride={{ margin: '80px auto' }}\n      />\n    );\n  }\n\n  return (\n    <>\n      <TerndingTitle>Trending Today</TerndingTitle>\n      <MovieList>\n        {moviesName.map(name => {\n          return (\n            <MovieNavLink\n              key={name.id}\n              to={`/movies/${name.id}`}\n              state={location}\n              className=\"link-movie\"\n            >\n              <MoviesItems\n                id={name.id}\n                poster_path={name.poster_path}\n                tags={name.title}\n                title={name.original_title}\n              />\n            </MovieNavLink>\n          );\n        })}\n      </MovieList>\n      <Paginagion\n        handlePageChange={handlePageChange}\n        currentPage={currentPage}\n        total={totalPage}\n      />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["CastIMG","styled","CastList","Item","CastCharacter","CastName","CastMessage","CastItem","name","character","photo","src","alt","Card","CardButton","CardContainer","ImgCard","InfoContainer","Chip","GenerList","GenerItem","CardText","InfoCard","InfoList","InfoItem","MainTitle","SecondTitle","AdditionalInfo","CardLink","Link","LinkBTN","CardDetailMovie","details","original_title","poster_path","genres","release_date","overview","vote_average","slice","toFixed","map","genre","id","MovieList","MovieItem","MovieImg","MovieTitle","TerndingTitle","MovieNavLink","NavLink","MoviesItems","tags","title","loading","FormSearch","InputSearch","BTNSearch","SearchBarMovies","setSearchParams","setCurrentPage","useState","query","setQuery","onSubmit","e","preventDefault","trim","toast","onChange","target","value","type","autoComplete","autoFocus","placeholder","MyPaginate","ReactPaginate","Paginagion","handlePageChange","total","currentPage","pages","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","activeClassName","previousClassName","nextClassName","disabledClassName","forcePage","axios","API_Authorization","fetchTrendingMovies","page","headers","Authorization","Accept","response","data","console","log","fetchSearchMovies","search","fetchDetailsMovies","fetchCastMovies","fetchReviewsMovies","moviesName","setMoviesName","setLoading","location","useLocation","totalPage","setTotalPage","useEffect","then","movie","results","total_pages","color","size","cssOverride","margin","to","state","className","selectedPage","selected"],"sourceRoot":""}